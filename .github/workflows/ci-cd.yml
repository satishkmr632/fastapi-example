name: CI/CD Pipeline for FastAPI

on:
  push:
    branches:
      - main # Trigger pipeline on pushes to the main branch

jobs:
  # Job 1: CI - Build and Test
  build-test:
    name: Build and Test FastAPI
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run Tests (Optional - replace with actual test framework)
      - name: Run Tests
        run: |
          echo "Running tests..."
          # Add your test command, e.g., pytest
          # pytest

  # Job 2: Build and Push Docker Image
  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test # Runs only after build-test job succeeds

    steps:
      - name: Debug Secret Variable
        run: echo "MY_SECRET"

      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fastapi-project:latest

  # Job 3: Deploy to Environment
  deploy:
    name: Deploy FastAPI to Environment
    runs-on: ubuntu-latest
    needs: docker-build-push # Runs only after Docker build-push job succeeds

    steps:
      # Step 1: Pull and Run the Docker Image
      - name: Run Container
        run: |
          echo "Deploying container..."
          docker run -d -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/fastapi-project:latest
          echo "Container is running at http://localhost:8000"
